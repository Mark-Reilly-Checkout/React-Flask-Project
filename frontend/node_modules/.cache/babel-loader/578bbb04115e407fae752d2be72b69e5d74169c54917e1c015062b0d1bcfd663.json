{"ast":null,"code":"var _jsxFileName = \"/Users/mark.reilly/Documents/react-flask-project/frontend/src/components/ApplePay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplePay = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    var _containerRef$current;\n    // Remove any existing apple-pay-button\n    const existingButton = document.querySelector('apple-pay-button');\n    if (existingButton) {\n      existingButton.remove();\n    }\n\n    // Create and append the new apple-pay-button\n    const el = document.createElement('apple-pay-button');\n    el.setAttribute('buttonstyle', 'black');\n    el.setAttribute('type', 'plain');\n    el.setAttribute('locale', 'en-US');\n    (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.appendChild(el);\n  }, []); // Empty array ensures this only runs once on initial render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Apple Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"text-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplePay, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = ApplePay;\nexport default ApplePay;\nvar _c;\n$RefreshReg$(_c, \"ApplePay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ApplePay","_s","containerRef","_containerRef$current","existingButton","document","querySelector","remove","el","createElement","setAttribute","current","appendChild","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/mark.reilly/Documents/react-flask-project/frontend/src/components/ApplePay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst ApplePay = () => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    // Remove any existing apple-pay-button\n    const existingButton = document.querySelector('apple-pay-button');\n    if (existingButton) {\n        existingButton.remove();\n    }\n\n    // Create and append the new apple-pay-button\n    const el = document.createElement('apple-pay-button');\n    el.setAttribute('buttonstyle', 'black');\n    el.setAttribute('type', 'plain');\n    el.setAttribute('locale', 'en-US');\n    containerRef.current?.appendChild(el);\n}, []);  // Empty array ensures this only runs once on initial render\n  return (\n    <div>\n        \n      <h1 className=\"text-center\">Apple Pay</h1>\n      <div ref={containerRef} className=\"text-center\"></div>\n    </div>\n  );\n};\n\nexport default ApplePay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IAAA,IAAAO,qBAAA;IACd;IACA,MAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;IACjE,IAAIF,cAAc,EAAE;MAChBA,cAAc,CAACG,MAAM,CAAC,CAAC;IAC3B;;IAEA;IACA,MAAMC,EAAE,GAAGH,QAAQ,CAACI,aAAa,CAAC,kBAAkB,CAAC;IACrDD,EAAE,CAACE,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC;IACvCF,EAAE,CAACE,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;IAChCF,EAAE,CAACE,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC;IAClC,CAAAP,qBAAA,GAAAD,YAAY,CAACS,OAAO,cAAAR,qBAAA,uBAApBA,qBAAA,CAAsBS,WAAW,CAACJ,EAAE,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;EACP,oBACET,OAAA;IAAAc,QAAA,gBAEEd,OAAA;MAAIe,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CnB,OAAA;MAAKoB,GAAG,EAAEjB,YAAa;MAACY,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}